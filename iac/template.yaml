AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  AppName:
    Type: String
    Default: "DefaultApp"
  Environment:
    Type: String
    Default: "DefaultEnv"
  # EmailRecipient:
  #   Type: String
  #   Description: "Email address to receive cost reports."
  CodeS3Bucket:
    Type: String
    Description: "S3 bucket name which stores code .zip"
  CodeZipName:
    Type: String
    Description: "Name of the code zip file"
  S3SourceBucketName:
    Type: String
    Description: "S3 bucket name for lambda source file"  
  S3FileName:
    Type: String
    Description: "S3 bucket file name"      

Resources:
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaPermissions"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ses:SendEmail"
                  - "ce:GetCostAndUsage"
                  - "resourcegroupstaggingapi:GetResources"
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents 
                  - cloudformation:*     
                  - ec2:*
                  - s3:*
                  - events:*
                  - iam:*            
                Resource: "*"

  CostReportLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: CostMonitoringLambda
      Handler: "index.lambda_handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref CodeZipName
      Runtime: "python3.9"
      Timeout: 900
      Environment:
        Variables:
          APP_NAME: !Ref AppName
          ENVIRONMENT: !Ref Environment
          S3_FILE_NAME: !Ref S3FileName
          S3_SOURCE_BUCKET: !Ref S3SourceBucketName
#          EMAIL_RECIPIENT: !Ref EmailRecipient

  # LambdaTrigger:
  #   Type: "AWS::Events::Rule"
  #   Properties:
  #     ScheduleExpression: "rate(5 minutes)"
  #     Targets:
  #       - Arn: !GetAtt CostReportLambda.Arn
  #         Id: "CostReportLambdaTarget"

  # LambdaPermission:
  #   Type: "AWS::Lambda::Permission"
  #   Properties:
  #     FunctionName: !Ref CostReportLambda
  #     Action: "lambda:InvokeFunction"
  #     Principal: "events.amazonaws.com"